name: 🚀 Automated Release on PR Merge

on:
  pull_request:
    types: [closed]
    branches: [master, main]

jobs:
  auto-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: read
    
    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test

      - name: 🏗️ Build package
        run: npm run build

      - name: 🔍 Analyze PR for version bump
        id: version
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          
          echo "🔍 Analyzing PR: $PR_TITLE"
          
          # Check for breaking changes
          if echo "$PR_TITLE $PR_BODY" | grep -iE "(BREAKING CHANGE|breaking:|major:|MAJOR)"; then
            echo "bump=major" >> $GITHUB_OUTPUT
            echo "📈 Detected MAJOR version bump"
          elif echo "$PR_TITLE" | grep -iE "(feat:|feature:|minor:|MINOR)"; then
            echo "bump=minor" >> $GITHUB_OUTPUT
            echo "📈 Detected MINOR version bump"
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
            echo "📈 Detected PATCH version bump"
          fi

      - name: 📈 Bump version
        id: bump
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION=$(npm version ${{ steps.version.outputs.bump }} --no-git-tag-version)
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "current_version=v$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "📦 Version bump: v$CURRENT_VERSION → $NEW_VERSION"

      - name: 📝 Generate release notes
        id: release_notes
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          NEW_VERSION="${{ steps.bump.outputs.version }}"
          
          RELEASE_NOTES="## 🎉 Release $NEW_VERSION

          **Merged PR:** $PR_TITLE (#$PR_NUMBER)
          **Author:** @$PR_AUTHOR
          **Version Bump:** ${{ steps.version.outputs.bump }}
          
          ### 📋 Changes:
          $PR_BODY
          
          ---
          
          ### 📦 Installation:
          \`\`\`bash
          npm install @codechu/flow-core-container@$NEW_VERSION
          \`\`\`
          
          ### 🔗 Links:
          - **NPM Package:** https://www.npmjs.com/package/@codechu/flow-core-container
          - **Full Changelog:** https://github.com/${{ github.repository }}/compare/${{ steps.bump.outputs.current_version }}...$NEW_VERSION"
          
          # Save to file to avoid shell escaping issues
          cat > release_notes.md << 'EOF'
          $RELEASE_NOTES
          EOF
          
          echo "Generated release notes for $NEW_VERSION"

      - name: 💾 Commit version bump
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          
          git add package.json package-lock.json
          git commit -m "🔖 Release ${{ steps.bump.outputs.version }}

          Automated version bump from PR merge (#${{ github.event.pull_request.number }})
          Author: @${{ github.event.pull_request.user.login }}
          Type: ${{ steps.version.outputs.bump }}"
          
          git push origin master

      - name: 🏷️ Create tag and GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_VERSION="${{ steps.bump.outputs.version }}"
          
          # Create and push tag
          git tag $NEW_VERSION
          git push origin $NEW_VERSION
          
          # Create GitHub release
          gh release create $NEW_VERSION \
            --title "🏷️ $NEW_VERSION - Auto Release" \
            --notes-file release_notes.md \
            --latest

      - name: 📦 Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🎉 Success notification
        run: |
          NEW_VERSION="${{ steps.bump.outputs.version }}"
          echo "✅ Successfully released $NEW_VERSION"
          echo "📦 NPM: https://www.npmjs.com/package/@codechu/flow-core-container"
          echo "🔗 Release: https://github.com/${{ github.repository }}/releases/tag/$NEW_VERSION"
          echo "📋 PR: https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"